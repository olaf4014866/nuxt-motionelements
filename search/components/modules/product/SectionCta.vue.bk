<template>
  <div class="py-3 sticky-top">
    <div class="border border-light rounded p-3 mb-3">

      <!-- Pricing, Versions, CTA -->
      <div>

        <!-- If there is only 1 version -->
        <div
          v-if="versions.length < 2"
          class="d-flex align-items-end justify-content-between flex-nowrap mb-2"
        >
          <p v-if="isShowFormat" class="ver-label text-muted mb-0">
            {{ element.versions[versions[0]].format ? _.toUpper(element.versions[versions[0]].format) : 'Custom' }}
          </p>
          <div class="ver-price">
            <template v-if="element.price">
              <p class="h4 mb-0">{{ currencySymbol }} {{ element.price }}</p>
            </template>
            <template v-if="!element.price">
              <p class="mb-0">
                <span class="text-dark lead">{{ $t('product.free') }}</span><br />
                <small>{{ $t('product.with_subscription') }}</small>
              </p>
            </template>
          </div>
        </div>

        <!-- If there are multiple versions -->
        <div v-if="versions.length > 1">
          <div class="btn-group-toggle btn-ver-toggle" data-toggle="buttons">

            <label
              v-for="version in versions"
              :key="element.versions[version].id"
              class="btn btn-ver btn-block btn-simple-secondary mb-2"
            >
              <!-- TODO: Need to add default .active to .btn-ver
                - check if any is subscription-free, add to first subscription item
                - if no subscription-free, add to first .btn-ver
              -->
              <input type="radio" autocomplete="off">
              <div class="d-flex justify-content-between align-items-center">
                <p class="ver-label text-dark">
                  {{ element.versions[version].format ? _.toUpper(element.versions[version].format) : 'Custom' }}
                </p>
                <div class="ver-price text-right">
                  <template v-if="element.versions[version].price">
                    <p>{{  _.toUpper(element.versions[version].currency) }} {{ element.versions[version].price }}</p>
                  </template>
                  <template v-if="!element.versions[version].price">
                    <p class="mb-0">
                      <span class="text-dark">{{ $t('product.free') }}</span><br />
                      <small>{{ $t('product.with_subscription') }}</small>
                    </p>
                  </template>
                </div>
              </div>
            </label>

          </div>
        </div>
        <div class="d-flex mb-3">
          <button
            class="btn btn-primary flex-grow-1"
            @click="ctaClick()"
          >
            <font-awesome-icon
              :icon="['fas','me-download']"
              class="mr-2"
            ></font-awesome-icon>
            {{ $t('cta.download') }}
          </button>
          <button
            class="btn btn-simple-primary ml-2"
            data-toggle="tooltip" data-placement="bottom"
            title="Add to Favorites"
            @click="addFavorites()"
          >
            <font-awesome-icon
              :icon="['far','heart']"
            ></font-awesome-icon>
          </button>
        </div>
      </div>

      <!-- Feature Icons -->
      <div>

        <hr
          v-if="element.exclusive === true || element.subscription === true"
        />

        <div>
          <!-- ME Exclusive -->
          <FeatureIconsItem
            v-if="element.exclusive === true"
          >
            <template slot="icon">
              <SvgGradientFill :color="'primary'" />
              <font-awesome-icon
                size="lg"
                class="mr-2 text-gradient-primary"
                fixed-width
                :icon="['fas','me-diamond']"
              ></font-awesome-icon>
            </template>
            <template slot="label">
              {{ $t('product.only_on_me') }}
            </template>
          </FeatureIconsItem>

          <!-- Is available for subscription download -->
          <FeatureIconsItem
            v-if="element.subscription"
          >
            <template slot="icon">
              <SvgGradientFill :color="'subscription'" />
              <font-awesome-icon
                size="lg"
                class="mr-2 text-gradient-subscription"
                fixed-width
                :icon="['fas','me-lightning']"
              ></font-awesome-icon>
            </template>
            <template slot="label">
              {{ $t('product.available_for_subscription') }}
            </template>
          </FeatureIconsItem>
        </div>

        <FeatureIcons
          :element="element"
        ></FeatureIcons>

      </div>

      <!-- View Included Files & Readme -->
      <div>
        <hr v-if="true" />
        <button
          type="button"
          class="btn btn-sm btn-block btn-light"
          @click="includedFilesClick()"
        >
          <font-awesome-icon
            :icon="['far','me-files']"
            fixed-width
          ></font-awesome-icon>
          {{ $t('product.check_files') }}
        </button>
        <button
          type="button"
          class="btn btn-sm btn-block btn-light"
        >
          <font-awesome-icon
            :icon="['far','file']"
            fixed-width
          ></font-awesome-icon>
          {{ $t('product.download_readme') }}
        </button>
      </div>

    </div>

    <!-- Looking for Video or GIF -->
    <template v-if="element.mediaType === 'video-live' || element.mediaType === 'animation' || element.mediaType === 'gif'">
      <div class="border border-light rounded p-3 mb-3 d-flex">
        <font-awesome-icon
          :icon="['fas',element.mediaType === 'gif' ? 'me-images' : 'me-video']"
          class="text-muted mr-3 mt-2"
          fixed-width
        ></font-awesome-icon>
        <div>
        <p class="mb-0">
          {{ $t('product.looking_for') }}
            {{ element.mediaType === 'gif' ? 'Image + GIF' : 'Video' }}?
        </p>
        <a
          href="#"
          class="btn btn-sm btn-simple-secondary"
        >
          {{ $t('product.for_video_element') }}
        </a>
        </div>
      </div>
    </template>

    <!-- TODO: Show only for admin members (ie only ME staff) -->
    <div
      v-if="isAdmin"
      class="card border-danger"
    >
      <div class="card-body">
        <h5 class="card-title text-danger">Admin Tools</h5>
        <p class="card-text small">
          <button
            class="btn btn-sm btn-light btn-block mb-2"
            @click="adminClick('support-note')"
          >
            <font-awesome-icon :icon="['far','pencil']" class="mr-1"></font-awesome-icon> Support note
          </button>
          <button
            class="btn btn-sm btn-light btn-block mb-2"
            @click="adminClick('admin-download')"
          >
            <font-awesome-icon :icon="['far','me-download']" class="mr-1"></font-awesome-icon> Download Stills
          </button>
          <button
            class="btn btn-sm btn-light btn-block mb-2"
            @click="adminClick('request-release')"
          >
            <font-awesome-icon :icon="['far','file-alt']" class="mr-1"></font-awesome-icon> Request release
          </button>
          <button
            class="btn btn-sm btn-light btn-block mb-2"
            @click="adminClick('suspend-element')"
          >
            <font-awesome-icon :icon="['far','snooze']" class="mr-1"></font-awesome-icon> Suspend product
          </button>
        </p>
      </div>
    </div>

  </div>
</template>

<script>
import { mapState } from 'vuex';

export default {
  name: 'cta-section',
  components: {
    SvgGradientFill: () => import('@/components/modules/common/SvgGradientFill.vue'),
    FeatureIcons: () => import('@/components/modules/product/cta/FeatureIcons.vue'),
    FeatureIconsItem: () => import('@/components/modules/product/cta/FeatureIconsItem.vue'),
  },
  props: {
    isAdmin: Boolean,
    element: Object,
  },
  computed: {
    ...mapState({
      isMember: state => state.member.isMember,
    }),
    currencySymbol() {
      const mapCurrencies = this.$store.getters['site/mapCurrencies'];
      const currentCurrency = this.$store.getters['site/currentCurrency'];
      const currencyInfo = (mapCurrencies[currentCurrency]) || mapCurrencies.USD;
      return currencyInfo.symbol;
    },
    isShowFormat() {
      switch (this.element.mediaType) {
        case 'video-live':
        case 'animation':
          return true;
        default:
          return false;
      }
    },
    versions() {
      return Object.keys(this.element.versions);
    },
  },
  mounted() {
    $('[data-toggle="tooltip"]').tooltip();
  },
  methods: {
    addFavorites() {
      this.$bus.$emit('product-favorited', this.element);
    },
    ctaClick() {
      if (this.element.mediaType === 'gif') {
        // for GIF, open Gif Creator Modal
        this.$root.$emit('show-modal', 'gif-creator');
      } else {
        // normal purchase flow
        this.$root.$emit('show-modal', 'confirm-purchase');
      }
    },
    includedFilesClick() {
      this.$root.$emit('show-modal', 'included-files');
    },
    adminClick(modalId) {
      // TODO: do a double check if member is Admin
      this.$root.$emit('show-modal', modalId);
    },
  },
};
</script>

<style lang="scss" scoped>
.btn-ver {
  .ver-label, .ver-price, .ver-price p {
    margin-bottom: 0;
  }

  .ver-label {
    font-weight: bold;
  }

  &.active {
    padding: 0.125rem 0.875rem;
    border-width: .125rem;
    border-color: $primary !important;
  }
}

.ver-price {
  line-height: 1.5;
}
</style>
